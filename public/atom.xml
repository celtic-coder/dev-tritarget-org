<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[TriTarget]]></title>
  <link href="http://tritarget.org/atom.xml" rel="self"/>
  <link href="http://tritarget.org/"/>
  <updated>2012-03-30T08:43:27-04:00</updated>
  <id>http://tritarget.org/</id>
  <author>
    <name><![CDATA[Devin Weaver]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[I'm getting married no really]]></title>
    <link href="http://tritarget.org/blog/2011/08/17/im-getting-married-no-really/"/>
    <updated>2011-08-17T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2011/08/17/im-getting-married-no-really</id>
    <content type="html"><![CDATA[<p>So as an update on what I&#8217;ve been doing (considering I haven&#8217;t posted in a long
time). I&#8217;ve been pretty occupied. I planning a wedding and a buying a house all in the same month!</p>

<p>WTF I say I&#8217;m a <em>mad man</em>! Yup I am crazy. But that is where my time has been sucked into.</p>

<p>I am still updating <a href="http://github.com/sukima/SimNotify">SimNotify</a> but recently I created the <a href="http://maddywillyoumarryme.com">wedding
site</a>. It will hold all the updates about the wedding and the house. If you
interested in me check it out. BTW The site was created in Jekyll just like
this one and I&#8217;m a little proud of it. Unlike this site I made it compatible
with iPhones using CSS and JavaScript. The site content is very geeky and
quirky. I put in a lot of references to geek culture. Thought it was fun to
mention.</p>

<p>Oh and I have also added Atom feed support to this blog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Do presentations need to be this complicated?]]></title>
    <link href="http://tritarget.org/blog/2011/02/24/do-presentations-need-to-be-this-complicated/"/>
    <updated>2011-02-24T00:00:00-05:00</updated>
    <id>http://tritarget.org/blog/2011/02/24/do-presentations-need-to-be-this-complicated</id>
    <content type="html"><![CDATA[<p>So I was tasked to run a class on how to run and use a propriatary software.
Our class room was all decked out with the latest SmartBoard technology. But
that is the only highlight of this convoluted story that will leave you
scrating your head in disbalief.</p>

<p>The computer booted up and imediatly started barking about missing network
drive <code>//FILES/.../Desktop</code> and my first thought was &#8220;Wait WTF? Network drive?
No I&#8217;m showing a powerpoint Why the fsck would I want a network drive?&#8221; This
error poped up roughly about every 2 minutes. Very anoyying. Then I was unable
to install the propiatary software as I was connected as some network
authentication and as the error box was very vocal about there was no network
(incidently how did I log on if I had no network?)</p>

<p>Anyway among this and many other issues I gave up and grabbed a laptop which
had the software on it. Opps That didn&#8217;t work. You see the wonderful folks at
HP thought it was wise to put a video card in that could not handle mirrored
displays. This was a problem because the software we use will take over a
second monitor if one exists. So it&#8217;s either the laptop display or an extended
display. Either way the students don&#8217;t get to see the presenters view on the
projector. I also found out that the laptop doesn&#8217;t allow the primary display
to be anything other then the laptop LCD! sigh.</p>

<p>So I thought hey my Mac has a virtual machine, one monitor output, and the
software installed running perfect. Only to find out I forgot the VGA adapter!
Damb it!</p>

<p>Final solotion was to hook up a ether net cable between the HP laptop and the
Mac. Run the virtual machine in full screen. Setup a temporary network between
the machines. Use VNC to view the mac screen and put the VNC viewer on the
extended desktop. Phew that was a lot! But it worked and the students could see
the software on the projector.</p>

<p>Perhaps convoluted but it worked. I&#8217;ll be contacting the IS department to
figure out why the presentation machine is bust-icated.</p>

<p>Inginuity at it&#8217;s best.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keeping track of your todo]]></title>
    <link href="http://tritarget.org/blog/2011/01/11/keeping-track-of-your-todo/"/>
    <updated>2011-01-11T00:00:00-05:00</updated>
    <id>http://tritarget.org/blog/2011/01/11/keeping-track-of-your-todo</id>
    <content type="html"><![CDATA[<p>I am a big fan of productivity tools. I love utilities that make my life
better. &#8220;Life-hacking&#8221; is the term. I use a great tool called <a href="http://culturedcode.com/things/">Things</a>.
However, it has some big draw backs. First off it is centralized to one file.
You can organize it by projects and areas of responsibility. Thing is this
didn&#8217;t fit well with organizing tasks to specific programming projects.</p>

<p>It seems silly to have <em>pick up the milk</em> mixed with a project for my latest
development project (<em>add newMigration() method to MainController</em>). Because of
this development todos in <a href="http://culturedcode.com/things/">Things</a> wasn&#8217;t contextually appropriate. I code on
the command line and should have my project&#8217;s todo on the command line (think:
ssh). Not only that but it was centralized and not scoped to each project.</p>

<p>(Finally <a href="http://culturedcode.com/things/">Things</a> doesn&#8217;t have cloud syncing but bonjour syncing which is
impossible while at work! You listening <a href="http://culturedcode.com/">Cultured Code</a>? The syncing problem
makes <a href="http://www.omnigroup.com/products/omnifocus/">Omnifocus</a> look good!)</p>

<p>So to the terminal&#8230; I found this great app called <a href="http://taskwarrior.org/projects/show/taskwarrior/">TaskWarrior</a> which is a
very full featured task manager. It is <a href="http://www.davidco.com/what_is_gtd.php">GTD</a> on the command line. Trouble is
it was centralized to one database as well. Tons of features but I still wanted
my databases based per project (directory) and optionally commit the database
to version control.</p>

<h4>Developer Todo List</h4>

<p>To the rescue is this gem called the <a href="http://swapoff.org/DevTodo">Dev Todo</a>. It is a task manager that
uses an XML file in the current directory. It&#8217;s so simple it&#8217;s stupid. However,
it is not without some great features. I use this to keep track of what I need
or want to do with a project. Basically a simple note taking. The command line
is simple and it&#8217;s quick. You have a great level of flexibility since the data
is nothing but a simple XML file which is well formatted and intuitive to
understand. But who edits data manually. The program will output, organize,
manage, and track tasks with <strong>color</strong>! It has hierarchy and it can link to
multiple other databases.</p>

<p>Here is how I&#8217;ve used it. In my Rails app I had a master <code>.todo</code> file in the
root directory of the app. I stored all the main tasks there. I also made a
todo in the <code>test</code> directory then linked them.</p>

<pre><code>$ tda -p medium add new action for :print in main_controller.rb
Index of new item is 1
$ cd test
$ tda -p medium refactor unit tests
Index of new item is 1
$ tda -p medium refactor functional tests
Index of new item is 2
$ todo --title Testing
$ cd ..
$ tdl -p high test/.todo
$ todo +
  1.Testing
      1.refactor unit tests
      2.refactor functional tests
  2.add new action :print for main_controller.rb
</code></pre>

<p>I can&#8217;t say enough cool things about this app. Perhaps I&#8217;ll write more at a
later time but it has saved me. It is now one of my must haves in development.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Source code is NOT documentation]]></title>
    <link href="http://tritarget.org/blog/2010/10/26/source-code-is-not-documentation/"/>
    <updated>2010-10-26T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2010/10/26/source-code-is-not-documentation</id>
    <content type="html"><![CDATA[<p>I just have to get this out there <strong>Source Code is NOT documentation</strong></p>

<p>Far to many times I see the response to documentation to be &#8220;Look at the source
code&#8221; Or if you can&#8217;t figure it out by looking at the source code you shouldn&#8217;t
be coding. This kind of thinking is viral in the open source community.</p>

<p>I going to give an example of a project I was working on. It halted for 3
weeks because all I had was the source code to use for documentation. I was
making a Ruby on Rails app and wazs attempting to make a <a href="http://github.com/thoughtbot/shoulda">shoulda</a> add on
that would complement the testing well.</p>

<p>The only examples were to look at the source code for shoulda so I went to
there <a href="http://github.com/thoughtbot/shoulda">github page</a> and started reading all the source code. It became
clear that they were moving from one paradigm to another. (For those familiar
shoulda uses matchers not macros now) Well all the blog posts google could
find all talked about macros not matchers. I posted to <a href="http://stackoverflow.com/questions/3915065/adding-custom-shoulda-matchers-to-testcase">stackoverflow</a>
about this and got no response. I chated in IRC several timew and still no
leads on how to crate a custom matcher other then looking at the source code
as an example.</p>

<p>Well I did that I wrote a matcher based on the source code opnly to find out
that the matchers couldn&#8217;t use common functions that a TestCase object could.
Sigh Back to macros. But wait theres more.</p>

<p>I eventually decided to figure out why adding a matcher was so convoluted
(<a href="http://gist.github.com/613522">gist with code</a>) and after several attempts and even breaking down to use
rdebug I found out that the source code that my app was using was a whole
major <a href="http://github.com/thoughtbot/shoulda/tree/v2.10.1">revision lower</a>! Yes the <code>gem instal shoulda</code> doesn&#8217;t equal the latest
revision. Then after code review of the correct revision it turns out that the
code does not support custom matchers.</p>

<p>The point of all this is that when it comes to using source code as your
documentation you miss a lot of the details and implementation examples
because the source code is <em>context sensitive</em> when custom macros, matchers,
etc. are based in a completely different context. This means that things will
get confusing very quickly and has a higher chance of becoming mismatched.</p>

<p>Please lets do more then just RTFC and offer beter contextual documentation.
Laziness kills a project faster then anything I know. I should talk!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why is testing so hard]]></title>
    <link href="http://tritarget.org/blog/2010/10/18/why-is-testing-so-hard/"/>
    <updated>2010-10-18T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2010/10/18/why-is-testing-so-hard</id>
    <content type="html"><![CDATA[<p>I am having a very difficult time trying to develop functional tests for my
recent RoR application. Some back history is that my RoR project uses
<a href="http://github.com/thoughtbot/shoulda">shoulda</a> and <a href="http://github.com/binarylogic/authlogic">authlogic</a> and I want to test that some actions require a
user to be logged in. I ran into a quandary when I realized that shoulda has
deprecated macros in favor of matchers.</p>

<p>So. For an example If I wanted to check that a specific action would fail if
there was no use logged in I would have done this in the past:</p>

<script src="http://gist.github.com/632707.js?file=require_logged_in_macro.rb"> </script>


<p>However this is limited in it&#8217;s use and <strong>does not</strong> conform to the direction
that shoulda has moved to (matchers) A better way to accomplish this is to
write a matcher like so:</p>

<script src="http://gist.github.com/632707.js?file=require_logged_in.rb"> </script>


<p>This affords you the flexibility as such:</p>

<pre><code>should require_logged_in
should require_logged_in(:post)
should require_logged_in.for(:show)
should require_logged_in(:post).for(:create)
</code></pre>

<p>A little better syntax in my opinion. There are two big problems using
matchers. First they are <strong>not</strong> included by default like macros were using
the <code>shoulda_macros</code> directory. They require some code in the
<code>test_helper.rb</code>:</p>

<pre><code>include Shoulda::RequireLoggedIn::Matchers
extend Shoulda::RequireLoggedIn::Matchers
</code></pre>

<p>Finally you can not have access to any method that <em>TestCase</em> would have
had normally for example <code>get</code> and <code>post</code>. So this last part renders that above
match code <strong>useless</strong>.</p>

<p>Call to all shoulda developers. Please can someone tell be what you should do?
Matchers or Macros?!</p>

<p>Thank you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dropping Outlook and Groupwise for Gmail]]></title>
    <link href="http://tritarget.org/blog/2010/10/07/dropping-outlook-and-groupwise-for-gmail/"/>
    <updated>2010-10-07T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2010/10/07/dropping-outlook-and-groupwise-for-gmail</id>
    <content type="html"><![CDATA[<p>At my job we are forced to use Groupwise for our email. This isn&#8217;t going to be
a post about how much Groupwise is not agreeable but instead I&#8217;m going to
describe my solution to making my work email much more agreeable. First I&#8217;ll
describe what solutions didn&#8217;t work and why.</p>

<p>First Outlook was not a solution as my IS department couldn&#8217;t figure out how
to do that even after months of emails claiming that it was &#8220;gonna&#8221; happen. As
you can tell I have great faith in that department. Moving on&#8230;</p>

<p>I figure it was time to start using Gmail. So I setup my Groupwise rule that
forwards any new mail to a new Gmail account I created for this. (The same can
be done with outlook and exchange). I had to make sure that gmail was set to
send mails from my work email (required a verification from the settings
panel). Then I had to tell gmail to use this as the default address.</p>

<p>My company places a signature every time I send an email. Because I would be
sending from gmail that professional &#8220;this email is confidential&#8221; message at
the end of the email would not be added. So I sent my self a test email to the
gmail account from my groupwise account and copy pasted the signature to
gmail&#8217;s signature setting.</p>

<p>Now I ran into a problem when attempting to use this solution with an iPhone.
I set it up as an exchange service because that supported push (instant
notifications that a new email has arrived). The problem with this is that
every time I sent an email it was from my gmail address <em>not</em> the work
address. Attempts to fix that were futile. I attempted using it as an
<a href="http://mail.google.com/support/bin/answer.py?hl=en&amp;answer=78799">IMAP service</a> but that didn&#8217;t set well and it disabled push. I was stuck
with only able to read them and not reply.</p>

<p>My final solution was to use gmail&#8217;s awesome mobile app. But that was slow and
since I had two gmail accounts (one for work and one for home) it was a pain
to have to log in and out each time. I found this great app called
<a href="http://www.usemailroom.com/">mailroom</a> which fixes all those issues. It is like <a href="http://mailplaneapp.com/">mailplane</a> for the
iPhone. It basically opens the gmail mobile email app inside and then saves it
to a cache so that it opens fast and with a better interface. It also allows
multiple gmail accounts. Perfect!</p>

<p>My setup is now to have the iPhone mail app set to gmail as an exchange
service. When it recives a push notice that there is new email I notice and
instead of opening up the mail app I open up <a href="http://www.usemailroom.com/">mailroom</a> and manage my email
there. I get the push but also get all the advantages of gmail including
threaded messages, labels, archiving, starring , and more.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[formtastic autocomplete with jQuery UI]]></title>
    <link href="http://tritarget.org/blog/2010/09/21/formtastic-autocomplete-with-jquery-ui/"/>
    <updated>2010-09-21T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2010/09/21/formtastic-autocomplete-with-jquery-ui</id>
    <content type="html"><![CDATA[<p>I did a little hacking in Ruby on Rails using <a href="http://github.com/justinfrench/formtastic">formtastic</a> to make an
autocomplete text box. The trouble as of this writing formtastic does not have
an autocomplete input. RoR uses some RJS magic to accomplish autocomplete but I
never like RJS styled AJAX. I prefer unobtrusive JS especially with jQuery.</p>

<p>What I did was create a custom input for formtastic that did nothing but adds a
HTML class name to the input field. Then I had the jQuery turn these to
autocomplete. However to get the values of the autocomplete I also created a
seperate action that returns a <strong>map</strong> to the correct path to the AJAX action.
I don&#8217;t like how complicated that sounds. Maybe some code snippits?</p>

<p>First lets set up the formtastic input (place this in the <code>lib</code> directory):</p>

<script src="http://gist.github.com/590498.js?file=application_formtastic_builder.rb"> </script>


<p>Now in the view I can setup the form:</p>

<script src="http://gist.github.com/590498.js?file=model_view.html.erb"> </script>


<p>This will allow jQuery to find the text field. However jQuery needs to ask the
application where to look for the autocomplete data. We will create a route to
a custom action and it will tell jQuery where to look. First the routes file:</p>

<script src="http://gist.github.com/590498.js?file=routes.rb"> </script>


<p>Now the contgroller that includes the mapping and the data (this could be done
through more than one controller):</p>

<script src="http://gist.github.com/590498.js?file=main_controller.rb"> </script>


<p>And finally the javascript to make it all happen:</p>

<script src="http://gist.github.com/590498.js?file=application.js"> </script>


<p>I also include the jQuery js request problem. Take a look at this
<a href="http://www.justinball.com/2010/08/09/jquery-ajax-requests-are-html-not-js/">blog post</a> for some good information concerning jQuery AJAX and Rails.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New site design]]></title>
    <link href="http://tritarget.org/blog/2010/08/23/new-site-design/"/>
    <updated>2010-08-23T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2010/08/23/new-site-design</id>
    <content type="html"><![CDATA[<p>How do you like the new site design?</p>

<p>Not much to say since this is a visual thing but the menu to the left is
collapsible. (I love jQuery)</p>

<p>Oh I should mention I developed a JavaScript port of the clasic <a href="http://catb.org/~esr/ski/">ski game</a>
and it is an easter egg here using the <a href="http://en.wikipedia.org/wiki/Konami_Code">konami code</a>. try it out and have
fun. And check out the code if you want to play with it at
<a href="http://sukima.github.com/skiQuery/">skiQuery GitHub page</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A custom application configuration solution for Ruby on Rails]]></title>
    <link href="http://tritarget.org/blog/2010/08/06/custom-application-config-got-ruby-on-rails/"/>
    <updated>2010-08-06T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2010/08/06/custom-application-config-got-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>I found this great <a href="http://railscasts.com/episodes/85-yaml-configuration-file">RailsCast</a> about making a global configuration. However
I wanted to further customize it by allowing global configurations regardless
of the environment.</p>

<p>For example this is the original idea:</p>

<pre><code># config/config.yml
development:
  perform_authentication: false

test:
  perform_authentication: false

production:
  perform_authentication: true
  username: admin
  password: secret
</code></pre>

<p>This would require that there be a lot of repetition. What I wanted was a way
to write a global variable once and still keep differences for the
environments. I eventually thought of this solution to manipulate the hash
after the fact (avoiding the warnings that a constant variable being changed).</p>

<p>Instead I want to make it more like:</p>

<pre><code>global_var1: "foo"
global_var2: "bar"
environments:
  development:
    env_var: "foobar"
  test:
    env_var: "barfoo"
</code></pre>

<p>This will produce the following config when <code>RAILS_ENV</code> is development:</p>

<pre><code>APP_CONFIG['global_var1']    #=&gt; "foo"
APP_CONFIG['global_var2']    #=&gt; "bar"
APP_CONFIG['env_var']        #=&gt; "foobar"
</code></pre>

<p>Here is the code:</p>

<script src="http://gist.github.com/510438.js?file=load_config.rb"></script>


<p>In a rails application you can put <code>load_config.rb</code> into <code>config/initializers</code>
directory.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remote irssi notifications via ssh]]></title>
    <link href="http://tritarget.org/blog/2010/07/16/irssi-notifications-over-ssh/"/>
    <updated>2010-07-16T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2010/07/16/irssi-notifications-over-ssh</id>
    <content type="html"><![CDATA[<p>I started using <a href="http://irssi.org/">irssi</a> for chatting in IRC recently. One of the
interesting ideas is that I can SSH into a shell use <a href="http://en.wikipedia.org/wiki/GNU%20Screen">GNU screen</a> and run
my irssi client without having to <a href="http://quadpoint.org/articles/irssi">logout when I move computers</a> Great
solution except on problem.</p>

<p>When someone PM you or mentions you in a channel I like to get a
notification. On my Mac I used to run irssi locally which meant I could use
plugin to send the notification to growl via <a href="http://growl.info/documentation/growlnotify.php">growlnotify</a>. However you
can&#8217;t run this remotely when your using irssi inside an SSH session. Using a
remote SSH session also removed the ability for an irssi plugin to open a link
in your local browser.</p>

<p>Luckily I stumbled across this <a href="http://thorstenl.blogspot.com/2007/01/thls-irssi-notification-script.html">great idea</a> that uses a second SSH session
to <code>tail -f</code> a file that is appended to by the irssi plugin. It essentially
sends the notification back through by the second SSH session monitoring the
file.</p>

<p>I made a slight adjustment to allow URL posting and integrated growlnotify.</p>

<p>Download the <a href="http://www.leemhuis.info/files/fnotify/fnotify">fnotify</a> script on the SSH server and install it into irssi
like you would any other plugin. Then on your client (in this case I&#8217;m using
Max OS X with growl installed) and create this script:</p>

<script src="http://gist.github.com/478301.js">  </script>


<p>Then I also add the <a href="http://scripts.irssi.org/html/urlplot.pl.html">urlplot</a> (<a href="http://scripts.irssi.org/scripts/urlplot.pl">download</a>) script to irssi and set it&#8217;s
command to post the url to the fnotify log:</p>

<pre><code>/set url_command "echo \"RequestURLBrowse __URL__\" &gt;&gt; ~/.irssi/fnotify"
</code></pre>

<p>This script will post the growl notification for any highlights I get in irssi
and if it&#8217;s a url it will open it in my browser.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hiding side projects in a Git branch]]></title>
    <link href="http://tritarget.org/blog/2010/02/07/hide-side-projects-in-a-git-branch/"/>
    <updated>2010-02-07T00:00:00-05:00</updated>
    <id>http://tritarget.org/blog/2010/02/07/hide-side-projects-in-a-git-branch</id>
    <content type="html"><![CDATA[<p>So I found this really cool trick. A way to use Git branches to store complete
new repositories inside another. What I mean is basically hiding a side
project in a Git branch. This is great for things like unmodified images, HTML
source for a project page attached to the project itself, documentation,
storing large files that are not needed with every clone of the master branch,
storing approved copies of libraries and other dependencies.</p>

<p>I use this feature to store meta data on a project for example many of my
website projects have the actual web files but the design was first created
using comps (usually blank markups and/or Photoshop files). Once I use these
comps to make the site they are usually no longer needed. However later down
the road when I need to reference them because the client wished for a change
I find them deleted. I though about storing them out on the server but then
there is two locations I have to remember instead of the source repository.</p>

<p>In the SVN days I used to add a forth directory:</p>

<pre><code>Root
|+Tags
|+Branches
|+Trunk
`+Comps
</code></pre>

<p>There were the usual directories and another for the comps. Working on the
source you would checkout the Trunk directory and never see Comps unless you
checked it out manually.</p>

<p>Git also allows this only much easier and cleaner. And Github has a great how to
with there <a href="http://pages.github.com/">Github Pages</a> section and also from this <a href="http://madduck.net/blog/2007.07.11:creating-a-git-branch-without-ancestry/">blog post</a>.
However I&#8217;ll repost the instructions here.</p>

<p><strong>Make sure you have no local or un-committed changes or they will be lost!</strong></p>

<p>First create a new symbolic reference to a new branch. We don&#8217;t make a new
branch in the normal way because it will link itself to the current HEAD and
what we want it to link it to nothing. That way any files on the new branch
are unassociated to any branches you make with your code.</p>

<pre><code>$ git symbolic-ref HEAD refs/head/newbranch
</code></pre>

<p>This will create the new branch <em>and</em> put you in that branch. Next is a bit
strange. Since the <em>index</em> that Git knows about still has all the files in
the master branch and so doing a <code>git status</code> will show all those files ready
to be committed. This isn&#8217;t what we want we need to clear out the index.
Easiest way is to delete the index file since Git will recreate it if missing.
It will recreate it properly based on the branch we are in.</p>

<pre><code>$ rm .git/index
</code></pre>

<p>Last but not least all those files are still in the working directory. It&#8217;s a
pain to go through and <code>rm -rf</code> everything (And dangerous) make Git do it with
a clean.</p>

<pre><code>$ git clean -fdx
</code></pre>

<p><strong>UPDATE: This branch now needs to manually be attached</strong></p>

<p>Turns out (maybe a version thing) that I was unable to use the new branch
created before because git claimed it was detached. After I had commited
something (important or git thinks the branch hasn&#8217;t been born yet) I had to
explicitly check out the new branch for it to work:
<code>git checkout -b newbranch</code></p>

<p>Now Your ready. Add some files, Commit them and eventually push them.</p>

<pre><code>$ git push origin newbranch
</code></pre>

<p>What&#8217;s great is a clone by anyone will get the master branch and ignore this
new branch unless they need it and they pull it manually.</p>

<p><strong>UPDATE: full walk through</strong></p>

<pre><code>(no branch)$ git init test_repo
Initialized empty Git repository in /Users/suki/tmp/test_repo/.git/
(no branch)$ cd test_repo/
(master)$ echo "test data in master" &gt; testdata-in-master
(master)$ git add testdata-in-master
(master)$ git ci -m "First commit on master branch"
[master (root-commit) b879d9f] First commit on master branch
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 testdata-in-master
(master)$ git symbolic-ref HEAD refs/head/newbranch
(refs/head/newbranch)$ rm .git/index
(refs/head/newbranch)$ git clean -fdx
Removing testdata-in-master
(refs/head/newbranch)$ echo "test data in newbranch" &gt; testdata-in-newbranch
(refs/head/newbranch)$ git add testdata-in-newbranch
(refs/head/newbranch)$ git ci -m "First commit on newbranch branch"
[refs/head/newbranch (root-commit) ac63f64] First commit on newbranch branch
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 testdata-in-newbranch
(refs/head/newbranch)$ git checkout -b newbranch
Switched to a new branch 'newbranch'
(newbranch)$ git push origin newbranch
fatal: 'origin' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
(newbranch)$ ls
testdata-in-newbranch
(newbranch)$ git checkout master
Switched to branch 'master'
(master)$ ls
testdata-in-master
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown editor on an iPad or iPhone?]]></title>
    <link href="http://tritarget.org/blog/2010/02/05/markdown-editor-on-ipad-iphone/"/>
    <updated>2010-02-05T00:00:00-05:00</updated>
    <id>http://tritarget.org/blog/2010/02/05/markdown-editor-on-ipad-iphone</id>
    <content type="html"><![CDATA[<p>Is it possible to have a <a href="http://daringfireball.net/projects/markdown/syntax">markdown</a> editor on an <a href="http://www.apple.com/ipad/">iPad</a> or <a href="http://www.apple.com/iphone/">iPhone</a>?</p>

<p>This idea came to me on the basis that there are times when a full laptop is
overkill for a quick blog entry and yet my blogs are done in <a href="http://jekyllrb.com/">Jekyll</a> which
is <em>text</em> based not <em>word processor</em> based. Jekyll is starting to become more
popular with geeks. But you can only edit on a computer. Brushing aside the
question if blogging <em>should</em> be done on an iPhone and adding the concept of
an appliance with the iPad the need to have a <em>geek</em> text editor (as opposed
to Apple&#8217;s Pages) will become more apparent.</p>

<p>So lets look at the idea of a programmer inspired text editor on the iPhone
OS. Some of the key ideas needed in a successful editor could be:</p>

<ul>
<li>Syntax Highlighting</li>
<li>Easy cursor movement</li>
<li>Long line support</li>
<li>Ability to gain context of the text without sacrificing the readability</li>
<li>simplified text manipulation functions</li>
<li>file management (FTP, SSH, Git, Etc.)</li>
</ul>


<p>I&#8217;m a big <a href="http://www.vim.org/">VIM</a> fan but the idea of having many <em>modes</em> would be ridicules
on a touch device. Not to mention having keyboard shortcuts would be a
nightmare on a touch device. One idea would be to use gestures. But that&#8217;s a
lot of memorization and defeats the ease of use motto.</p>

<p>I had the thought of using the rotate gesture just like <a href="http://www.apple.com/accessibility/iphone/vision.html">VoiceOver</a>. One
could rotate their fingers to change the <em>modes</em>. Also one could use a finger
touch with slide to quickly move the cursor from column one to the last
column.</p>

<p>I&#8217;ll keep playing with interface ideas. I think there is some way git Jekyll
based blogs updated via an iPhone / iPad.</p>

<p>On a final note I think integrating Git would be awesome but is that overkill?</p>

<p>Please any ideas comments?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jekyll on Dreamhost]]></title>
    <link href="http://tritarget.org/blog/2010/02/04/jekyll-on-dreamhost/"/>
    <updated>2010-02-04T00:00:00-05:00</updated>
    <id>http://tritarget.org/blog/2010/02/04/jekyll-on-dreamhost</id>
    <content type="html"><![CDATA[<p>Well I took the learning exercise on getting <a href="http://jekyllrb.com/">Jekyll</a> working on
<a href="http://dreamhost.com/">Dreamhost</a> mainly because I have a <a href="http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way">gitosis</a> environment set up for my
personal projects. I had plans to write down the process I used to accomplish
this. However, after it was all completed I found a <a href="http://tatey.com/2009/04/29/jekyll-meets-dreamhost-automated-deployment-for-jekyll-with-git/">blog post</a> that
detailed exactly the process I haphazardly stumbled onto.</p>

<p>It should be noted that the author mentions that this method of deployment is
not ideal. And that a <a href="http://tatey.com/2009/10/29/simpler-deployment-for-jekyll-using-a-rakefile-and-rsync/">better solution</a> is available to most users.</p>

<p>I do like the Rakefile and rsync solution as it is quite elegant however for
my site which is under gitosis it isn&#8217;t usable. Gitosis blocks shell access
via SSH for the Git repo user in order to facilitate authentication. And
because the website is owned by the Git repo user rsync will never reach the
file system to sync. So in my case I have to use Git hooks and compile the
site on the server with Jekyll.</p>

<p>I have decided to allow the use of <a href="http://lesscss.org/">LESS</a> by using a <a href="http://tatey.com/2009/12/05/forking-jekyll-now-with-less-and-growl-notifications/">fork of Jekyll by
tatey</a> even if I don&#8217;t intend to use LESS soon at least I have it and this
fork has <a href="http://growl.info/">Growl</a> notifications (<a href="http://gemcutter.org/gems/growl">gem</a>).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Save the astronauts tether those pointers]]></title>
    <link href="http://tritarget.org/blog/2009/10/10/save-the-astronauts-tether-those-pointers/"/>
    <updated>2009-10-10T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2009/10/10/save-the-astronauts-tether-those-pointers</id>
    <content type="html"><![CDATA[<p>I think a lot of confusion comes from the idea of pointers and release
responsibility. I find it is best to think of pointers as tether
lines. Like in space the astronauts need to be very careful to
maintain their tether lines or else the astronaut will float way and
die a horrible death. Pointers are very much like that. The object you
alloc/init is your astronaut and the variable (pointer) you assign it
to is your first tether line. Now when you retain the object it
created another tether line.</p>

<div>
  <pre>
    <code class='objc'>// obj is now tethered to a spot on the space shuttle. 
NSObject *obj = [[NSObject alloc] init];
 
// Another tether line has just been tied to the SAME
// EXACT HOOK on the shuttle craft. 
[obj retain]; 

// You just removed one of the tethers. Since there is
// another one still attached you don't attempt to
// being the astronaut back inside. 
[obj release]; 

// You just sawed off the one hook you had and the
// astronaut and the last tether line is floating far
// away to die a horrible death. 
obj = nil; 

// A new astronaut has been attached to tether line
// attached to the shuttle craft. You have also just
// told the maintenance droid that when it is done
// swabbing the deck to cut only the tether line you
// just made. If that's the last line get the astronaut
// inside if not let the astronaut float some more with
// the other tether lines. 
obj = [[[NSObject alloc] init] autorelease]; 

// You have just attached another tether line to the
// astronaut however this time the new tether line is
// not attached to the same hook but to another
// astronaut floating around. 
NSMutableArray *array = [[NSMutableArray alloc] init]; 
[array addObject:obj]; 

// The maintenance droid has finished it's tasks (run
// loop complete pool is released) so it cuts the
// designated tether line. However there was another
// line that array attached to in its addObject: method
// so the astronaut doesn't float away. In other words
// array is responsible for the astronaut now and the
// original code doesn't care. What this does is tell
// you were the hook that holds the tether line is
// allowing you to pull the astronaut in to talk and
// let go without him floating away. It doesn't add a
// tether or remove one it simple says &quot;here I am&quot; If
// you want to not loose where the astronaut is then
// you have to take ownership by adding another tether
// line of your own so that when array cut it's tether
// line you still have the astronaut. 
NSObject *another_object = [array objectAtIndex:1]; 
[another_object retain]; 

// Second tether line cut. array still has one.
// Astronaut safe. 
[another_object release]; 

// And finally when you cut array's tether line both
// astronauts are brought in safely. The last line
// attached to array is pulled in and removed. Just
// before array goes inside he pulls in the original
// astronaut still attached to himself. 
[array release];</code>
  </pre>
</div>


<p>When you alloc/init you own that object it is your responsibility to
either release it appropriately or pass on the responsibility to
another object. NSArray will take one the responsibility (addObject:)
but it will not give that responsibility back (objectAtIndex:) when it
returns the object from objectAtIndex: it is your responsibility to
either not worry about it as you don&#8217;t need the object later. or if
you do to retain it yourself so that when array goes away it doesn&#8217;t
take you object that you made yourself responsible for away under your
nose.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bug tracking]]></title>
    <link href="http://tritarget.org/blog/2009/07/22/bug-tracking/"/>
    <updated>2009-07-22T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2009/07/22/bug-tracking</id>
    <content type="html"><![CDATA[<p>I recently installed <a href="http://www.mantisbt.org/">MantisBT</a> a PHP based bug tracker. I found a
<a href="http://git.mantisforge.org/">great plugin</a> that lets Mantis monitor a source repository and associate
the logs to issue and bug tickets.</p>

<p>I don&#8217;t have much explanation of the process I used to install it. It was your
basic PHP based system. I use gitosis to handle the Git repositories. I can
config gitosis to authorize gitweb with a cherry picked set of repositories.
However, Mantis uses gitweb to link into the git repositories. Since the
gitosis config handles gitweb publicly I didn&#8217;t want just anyone to browse the
source via gitweb. But I need a gitweb for all repositories so mantis could
track changes.</p>

<p>What I did was copy the gitweb CGI directory to another directory. I change
it&#8217;s configuration to read all repositories (Yes this includes the
gitosis-admin.git repo) and then use an apache .htaccess file to log access
except from the webserver itself (mantis PHP script).</p>

<div>
  <pre>
    <code class='apache'># filename: wwwroot/private_gitweb/.htaccess
order deny,allow
deny from all
allow from 127.0.0.1</code>
  </pre>
</div>


<p><em>You might have to replace <code>127.0.0.1</code> with the IP of your site not loaclhost.
(Use <code>ping yoursite</code> to get the external IP)</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git the new VCS]]></title>
    <link href="http://tritarget.org/blog/2009/03/30/git-the-new-vcs/"/>
    <updated>2009-03-30T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2009/03/30/git-the-new-vcs</id>
    <content type="html"><![CDATA[<p>I did a lot of reading last night. Enough to convince me to switch my
versioning software from Subversion to Git. I will be moving my sources there
soon. As this domain will also be moving. More later.</p>

<p><a href="http://git-scm.com/">Check out Git</a></p>

<p><strong>UPDATE:</strong> The switch has been made. I will be moving the old Subversion
repositories over soon.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Privacy in Wordpress]]></title>
    <link href="http://tritarget.org/blog/2008/10/29/privacy-in-wordpress/"/>
    <updated>2008-10-29T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2008/10/29/privacy-in-wordpress</id>
    <content type="html"><![CDATA[<p>For the longest time I couldn&#8217;t ever find any information on having a private
blog. My problem was I wanted a homepage accessible to all and yet allow family
members to contribute having their entries hidden from the public eye. Although
I could never decide if it should be blocked by catagory (role
based/authorization) or blocked globally (authentication).</p>

<p>I found the following solutions for Wordpress from a
<a href="http://wordpress.org/support/topic/100054?replies=6">forum entry</a>.</p>

<p>Role based: <a href="http://www.coppit.org/code/">Category Access</a> (scroll to bottom)</p>

<p>Authentication: <a href="http://wordpress.org/extend/plugins/private-wp/">Private WP</a>
and better Authentication:
<a href="http://wordpress.org/extend/plugins/members-only/">Members Only</a></p>

<p>Or using an outside (read site-wide) solution:
<a href="http://wordpress.org/extend/plugins/http-authentication/">HTTP Authentication</a>
(<a href="http://webscripts.softpedia.com/script/Snippets/Htaccess-User-Management-and-Authentication-System-10102.html">htaccess admin</a>)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Program]]></title>
    <link href="http://tritarget.org/blog/2008/10/29/my-first-program/"/>
    <updated>2008-10-29T00:00:00-04:00</updated>
    <id>http://tritarget.org/blog/2008/10/29/my-first-program</id>
    <content type="html"><![CDATA[<p>So lets take a look at programming. This will be our first installment on
programming. In this module we will look at making the computer do something
for us. There are two steps. Setting up the system to listen to us and telling
the system what to do.</p>

<p>We have chosen to use Java as the programming language. Mainly the choice was
because of OOP and tight Type Casting. We&#8217;ll get more into these later on. But
what we will get into now is the basics for getting the computer to talk to
us.</p>

<p>Now the computer uses what we call <em>Machine Code</em> to tell the CPU
(Computer) what to do. It is a series of one&#8217;s and zero&#8217;s that are specific to
that type of computer. When we write a program we have to translate that
program into this machine code and that is done through another program call a
compiler. Now for the monkey wrench. Java is a  bit different. Instead of
compiling it into machine code for your type of computer (PC, Mac, Etc.) it
will compile it into machine code for a <em>virtual</em> computer that doesn&#8217;t
exists. We call this special machine code <em>bytecode</em>. When you run a
compiled Java program (bytecode) your computer emulates this virtual computer
that the bytecode was meant for. We call this process the <em>Java Virtual
Machine</em>.</p>

<p><img src="http://tritarget.org/javavm.jpg" alt="Diagram of the application process" /></p>

<p>So how do we do this? First off you need the <a href="http://en.wikipedia.org/wiki/Java_Development_Kit" title="Wikipedia entry for Java Development Kit">Java Development</a> Kit. Head
over to <a href="http://java.sun.com/javase/" title="Official download of JDK">http://java.sun.com/javase/</a> and choose the <strong>JDK</strong> not the JRE to
download. (<a href="http://java.sun.com/javase/6/webnotes/install/jdk/install-windows.html" title="How to install the JDK on windows">Installation instructions</a> for windows users) Mac users can
download it <a href="http://developer.apple.com/java/download/" title="Java JDK Download">here</a>.</p>

<p>Once installed let&#8217;s do something simple: Our first program. Copy the following
into a file ending with the suffix <code>.java</code> for example
<code>C:\My_First_Project\hello.java</code></p>

<div>
  <pre>
    <code class='java'>/**
 * My First Program.
 * See the whole article at
 * http://tritarget.org/blog/2008/10/29/my-first-program/
 */
class Hello
{
    /**
     * Entry point.
     * @param args the command line parameters.
     */
    public static void main(String[] args)
    {
        // Output to the screen the following phrase.
        System.out.println(&quot;Hello World!&quot;);
    }
}</code>
  </pre>
</div>


<p>Now after you save it open up a command line (Most Windows computers will open
a command line by selecting Start | Run&#8230; and typing in <code>cmd</code> or <code>command</code>
depending on the Windows version. See <a href="http://commandwindows.com/command1.htm" title="Using the command line">commandwindows.com</a> for more info)
and get yourself to that directory. Then compile the code and run it through
the Virtual Machine. (The Java programs need to be in your PATH. If the
following does not work as expected perhaps you can take a look at <a href="http://java.sun.com/javase/6/webnotes/install/jdk/install-windows.html#Environment" title="Setting up your evironment in windows">setting
your PATH</a>)</p>

<pre><code>C:&gt; CD My_First_Project
C:\My_First_Project&gt; javac hello.java
C:\My_First_Project&gt; java Hello
Hello World!
</code></pre>

<p>So lets take a look at what we did.</p>

<ul>
<li><strong>Line 1:</strong> We changed the directory to where we save the file. This allows
us to perform actions contained within the directory. Helps with organizing
things and simplifies how we interact with the command line.
<strong>Line 2:</strong> We compile the source code into bytecode. the <code>javac</code> command</li>
<li>will make a new file in this directory called <code>Hello.class</code> which is the
bytecode.</li>
<li><strong>Line 3:</strong> We run the bytecode through the virtual machine. The command
<code>java</code> only needs to know what <em>class</em> you want to execute (Will
explain later) suffice it to say it does not need the <code>.class</code> and it is
capitalized.</li>
<li><strong>Line 4:</strong> This what you should see if everything worked out.</li>
</ul>


<p>Congratulations you just made your first program. I know kind of anti climatic
but we&#8217;ll get better. So lets look at parts of the program.</p>

<h4>Comments</h4>

<p>I don&#8217;t care what anyone says. Comments make the code! Learn them and use them!
A comment is a piece of text in your source code that doesn&#8217;t do anything. It
is there so when you read it or when others read it they know what the heck is
going on and how to use things. You will see through out my code there are
comments describing what it&#8217;s doing or information that is useful to someone
who is developing the program.</p>

<p>A comment is created by surrounding the text in the characters &#8217;<code>/*</code>&#8217; and
&#8217;<code>*/</code>&#8217; or if the line starts with &#8217;<code>//</code>&#8217;.</p>

<h4>Wrappers</h4>

<p>Ok so without getting into too much detail all Java programs must have the
following: Class definition and an Entry Point. We will discuss this later as
to why but for now every program you make will have a line that defines the
<em>class</em>:</p>

<div>
  <pre>
    <code class='java'>class Hello</code>
  </pre>
</div>


<p>Everything is surrounded by brackets. This give the code a look of hierarchy
again for organization. So we use these curly brackets around all the &#8220;blocks&#8221;
of code. Some people like to put the curly bracket on the same line some like
it underneath it doesn&#8217;t matter which either works just as well.</p>

<h4>Entry Point</h4>

<p>The entry point is where executing of your program starts. As we learn about
OOP you&#8217;ll understand that all programs have to start some where and they all
start with the following line (We will explain the meaning of these commands in
later modules):</p>

<div>
  <pre>
    <code class='java'>public static void main(String[] args)</code>
  </pre>
</div>


<p>And again we surround the next block in curly brackets.</p>

<h4>Execution</h4>

<p>Last but not least that actual  part of the code that does anything. As we
venture into OOP you understand why this command is so drawn out but for now
just deal with it looking cumbersome.</p>

<div>
  <pre>
    <code class='java'>System.out.println(&quot;Hello World!&quot;);</code>
  </pre>
</div>


<p>First off all <em>commands</em> end with a semi-colon. Forget one of these and it all
falls apart. Since this is our only statement we only have one. This is
different from say the above wrappers which do not need an ending semi-colon.
Now what we are asking the computer to do is ask the &#8220;System&#8221; object for the
output object and telling the output object to print a line of text. This
esentially just shows the &#8220;Hello World!&#8221; text on the screen since the output
object is associated with the command line your typing in.</p>

<p>That&#8217;s it for now we will get much more detail later but for now you made your
first program.</p>
]]></content>
  </entry>
  
</feed>
